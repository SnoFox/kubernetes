# if this ever breaks, see https://github.com/argoproj/argo-helm/tree/b21a9b00/charts/argo-cd#custom-resource-definitions
crds:
  install: true
  keep: true
global:
  domain: argo.snow-galaxy.ts.net
## Argo Configs
configs:
  cm:
    # Custom ignoreResourceUpdates from experience

    resource.customizations.ignoreDifferences.Service: |
    jqPathExpressions:
    - 'select(.metadata.annotations."tailscale.com/tailnet-ip" != null or .metadata.annotations."tailscale.com/tailnet-fqdn" != null) | .spec.externalName'
    resource.customizations.ignoreDifferences.apps_Deployment: |
      jqPathExpressions:
      - '.spec.template.metadata.annotations["operator.1password.io/last-restarted"]'
      - '.spec.template.metadata.annotations["kubectl.kubernetes.io/restartedAt"]'

    ## Default configuration for ignoreResourceUpdates.
    ## The ignoreResourceUpdates list contains K8s resource's properties that are known to be frequently updated
    ## by controllers and operators. These resources, when watched by argo, will cause many unnecessary updates.

    resource.customizations.ignoreResourceUpdates.all: |
      jsonPointers:
        - /status
    resource.customizations.ignoreResourceUpdates.argoproj.io_Application: |
      jqPathExpressions:
        - '.metadata.annotations."notified.notifications.argoproj.io"'
        - '.metadata.annotations."argocd.argoproj.io/refresh"'
        - '.metadata.annotations."argocd.argoproj.io/hydrate"'
        - '.operation'
    resource.customizations.ignoreResourceUpdates.argoproj.io_Rollout: |
      jqPathExpressions:
        - '.metadata.annotations."notified.notifications.argoproj.io"'
    resource.customizations.ignoreResourceUpdates.autoscaling_HorizontalPodAutoscaler: |
      jqPathExpressions:
        - '.metadata.annotations."autoscaling.alpha.kubernetes.io/behavior"'
        - '.metadata.annotations."autoscaling.alpha.kubernetes.io/conditions"'
        - '.metadata.annotations."autoscaling.alpha.kubernetes.io/metrics"'
        - '.metadata.annotations."autoscaling.alpha.kubernetes.io/current-metrics"'
    resource.customizations.ignoreResourceUpdates.ConfigMap: |
      jqPathExpressions:
        # Ignore the cluster-autoscaler status
        - '.metadata.annotations."cluster-autoscaler.kubernetes.io/last-updated"'
        # Ignore the annotation of the legacy Leases election
        - '.metadata.annotations."control-plane.alpha.kubernetes.io/leader"'
    resource.customizations.ignoreResourceUpdates.apps_ReplicaSet: |
      jqPathExpressions:
        - '.metadata.annotations."deployment.kubernetes.io/desired-replicas"'
        - '.metadata.annotations."deployment.kubernetes.io/max-replicas"'
        - '.metadata.annotations."rollout.argoproj.io/desired-replicas"'
    resource.customizations.ignoreResourceUpdates.discovery.k8s.io_EndpointSlice: |
      jsonPointers:
        - /metadata
        - /endpoints
        - /ports
    resource.customizations.ignoreResourceUpdates.Endpoints: |
      jsonPointers:
        - /metadata
        - /subsets

    resource.exclusions: |
      ### Network resources created by the Kubernetes control plane and excluded to reduce the number of watched events and UI clutter
      - apiGroups:
        - ''
        - discovery.k8s.io
        kinds:
        - Endpoints
        - EndpointSlice
      ### Internal Kubernetes resources excluded reduce the number of watched events
      - apiGroups:
        - coordination.k8s.io
        kinds:
        - Lease
      ### Internal Kubernetes Authz/Authn resources excluded reduce the number of watched events
      - apiGroups:
        - authentication.k8s.io
        - authorization.k8s.io
        kinds:
        - SelfSubjectReview
        - TokenReview
        - LocalSubjectAccessReview
        - SelfSubjectAccessReview
        - SelfSubjectRulesReview
        - SubjectAccessReview
      ### Intermediate Certificate Request excluded reduce the number of watched events
      - apiGroups:
        - certificates.k8s.io
        kinds:
        - CertificateSigningRequest
      - apiGroups:
        - cert-manager.io
        kinds:
        - CertificateRequest
      ### Cilium internal resources excluded reduce the number of watched events and UI Clutter
      - apiGroups:
        - cilium.io
        kinds:
        - CiliumIdentity
        - CiliumEndpoint
        - CiliumEndpointSlice
      ### Kyverno intermediate and reporting resources excluded reduce the number of watched events and improve performance
      - apiGroups:
        - kyverno.io
        - reports.kyverno.io
        - wgpolicyk8s.io
        kinds:
        - PolicyReport
        - ClusterPolicyReport
        - EphemeralReport
        - ClusterEphemeralReport
        - AdmissionReport
        - ClusterAdmissionReport
        - BackgroundScanReport
        - ClusterBackgroundScanReport
        - UpdateRequest


  ## Ref: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/argocd-cmd-params-cm.yaml
  params:
    # -- Create the argocd-cmd-params-cm configmap
    # If false, it is expected the configmap will be created by something else.
    create: true

    ## NOTE: This value should be set when you generate params by other means as it changes ports used by ingress template.
    server.insecure: false


server:
  ingress:
    enabled: true
    controller: generic
    # -- Additional ingress labels
    labels: {}
    # -- Additional ingress annotations
    ## Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough
    annotations: {}
    ingressClassName: "tailscale"
    hostname: "argo"
    path: /
    pathType: Prefix
    tls: true
    # -- Additional ingress paths
    # @default -- `[]` (See [values.yaml])
    ## Note: Supports use of custom Helm templates
    extraPaths: []
      # - path: /*
      #   pathType: Prefix
      #   backend:
      #     service:
      #       name: ssl-redirect
      #       port:
      #         name: use-annotation

    ## Note: Supports use of custom Helm templates
    extraRules: []
      # - http:
      #     paths:
      #     - path: /
      #       pathType: Prefix
      #       backend:
      #         service:
      #           name: '{{ include "argo-cd.server.fullname" . }}'
      #           port:
      #             name: '{{ .Values.server.service.servicePortHttpsName }}'

    # -- Additional TLS configuration
    # @default -- `[]` (See [values.yaml])
    extraTls: []
      # - hosts:
      #   - argocd.example.com
      #   secretName: your-certificate-name

