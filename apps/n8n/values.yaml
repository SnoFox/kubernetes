_shared_config:
  url: &url https://workflows.snow-galaxy.ts.net
  hostname: &hostname workflows.snow-galaxy.ts.net

ingress:
  enabled: true
  annotations: {}
  className: "tailscale"
  hosts:
   - paths:
       - /
  tls:
   - hosts:
      - workflows

# the main (n8n) application related configuration + Kubernetes specific settings
# The config: {} dictionary is converted to environmental variables in the ConfigMap.
main:
  # See https://docs.n8n.io/hosting/configuration/environment-variables/ for all values.
  config:
    n8n:
     host: *hostname
     port: 443
     protocol: https
     editor_base_url: *url
     proxy:
       hops: 1
     log:
       level: info
    hiring:
      banner:
        enabled: false
    webhook_url: *url
    db:
      type: postgresdb
      postgresdb:
        host: pg
  extraEnv:
    N8N_LICENSE_ACTIVATION_KEY:
      valueFrom:
        secretKeyRef:
          name: n8n-secrets
          key: license-key
    N8N_ENCRYPTION_KEY:
      valueFrom:
        secretKeyRef:
          name: n8n-secrets
          key: encryption-key
    DB_POSTGRESDB_USER:
      valueFrom:
        secretKeyRef:
          name: pg-secrets
          key: username
    DB_POSTGRESDB_PASSWORD:
      valueFrom:
        secretKeyRef:
          name: pg-secrets
          key: password

  persistence:
    # If true, use a Persistent Volume Claim, If false, use emptyDir
    enabled: true
    # what type volume, possible options are [existing, emptyDir, dynamic] dynamic for Dynamic Volume Provisioning, existing for using an existing Claim
    type: dynamic
    storageClass: "freenas-iscsi-csi"
    accessModes:
      - ReadWriteOnce
    size: 1Gi

  service:
    enabled: true
    # -- Service types allow you to specify what kind of Service you want.
    # E.g., ClusterIP, NodePort, LoadBalancer, ExternalName
    type: ClusterIP
    # -- Service port
    port: 80

  resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

extraManifests:
  # https://cloudnative-pg.io/documentation/1.27/cloudnative-pg.v1/
  - apiVersion: postgresql.cnpg.io/v1
    kind: Cluster
    metadata:
      name: pg
      namespace: n8n
    spec:
      instances: 1
      bootstrap:
        initdb:
          database: n8n
          owner: n8n
      postgresql:
        parameters:
          shared_buffers: "64MB"
      resources:
        requests:
          memory: "512Mi"
        limits:
          memory: "512Mi"
      storage:
        storageClass: "freenas-iscsi-csi"
        size: 5Gi
        pvcTemplate:
          accessModes:
            - ReadWriteOnce
  - apiVersion: onepassword.com/v1
    kind: OnePasswordItem
    metadata:
      name: n8n-secrets
      namespace: n8n
    spec:
      itemPath: "vaults/FMT/items/n8n:n8n-secrets"
  - apiVersion: onepassword.com/v1
    kind: OnePasswordItem
    metadata:
      name: pg-secrets
      namespace: n8n
    type: "kubernetes.io/basic-auth"
    spec:
      itemPath: "vaults/FMT/items/n8n:pg-secrets"
